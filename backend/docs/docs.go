// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/announcements": {
            "get": {
                "description": "Retrieves all announcements or by club_id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Announcements"
                ],
                "summary": "Get announcements",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by club ID",
                        "name": "club_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Announcement"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/announcements/create": {
            "post": {
                "description": "Allows an admin to create a new announcement",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Announcements"
                ],
                "summary": "Create an announcement",
                "parameters": [
                    {
                        "description": "Announcement content",
                        "name": "announcement",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.Announcement"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.Announcement"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/bookings": {
            "post": {
                "description": "Creates a booking with user ID, event ID, and booking status",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bookings"
                ],
                "summary": "Create a new booking",
                "parameters": [
                    {
                        "description": "Booking details",
                        "name": "booking",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.Booking"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/database.Booking"
                        }
                    },
                    "400": {
                        "description": "Invalid request data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Error creating booking",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/clubs": {
            "get": {
                "description": "Returns clubs, optionally filtered by category",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clubs"
                ],
                "summary": "List all clubs",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Filter by category",
                        "name": "category",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Club"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/clubs/{id}": {
            "get": {
                "description": "Returns details of a specific club",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clubs"
                ],
                "summary": "Get club by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Club ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.Club"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/clubs/{id}/officers": {
            "get": {
                "description": "Returns officer list by club ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Clubs"
                ],
                "summary": "List officers in a club",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Club ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Officer"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/event-permits/submit": {
            "post": {
                "description": "Accepts event, slots, documents, and notes. User must be logged in.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Permits"
                ],
                "summary": "Submit full event permit",
                "parameters": [
                    {
                        "description": "Full permit payload",
                        "name": "permit",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.FullPermitPayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Validates credentials and sets session cookie",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate a user",
                "parameters": [
                    {
                        "description": "User login credentials",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/routes.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "description": "Destroys session and logs out",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout a user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/routes.LogoutResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/routes.LogoutResponse"
                        }
                    }
                }
            }
        },
        "/submissions": {
            "get": {
                "description": "Returns event permits submitted by the logged-in user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Submissions"
                ],
                "summary": "Get my submissions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/routes.PermitSummary"
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "Returns a list of all registered users. Admin access recommended.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Retrieve all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.User"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/users/create": {
            "post": {
                "description": "Creates a new user with name, email, password, and role.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "New user data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "database.Announcement": {
            "type": "object",
            "properties": {
                "announcement_created_at": {
                    "type": "string"
                },
                "announcement_created_by": {
                    "type": "integer"
                },
                "announcement_id": {
                    "type": "integer"
                },
                "announcement_message": {
                    "type": "string"
                },
                "announcement_title": {
                    "type": "string"
                }
            }
        },
        "database.Booking": {
            "type": "object",
            "properties": {
                "booked_at": {
                    "type": "integer"
                },
                "booking_id": {
                    "type": "integer"
                },
                "booking_status": {
                    "type": "string"
                },
                "event_id": {
                    "type": "integer"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "database.Club": {
            "type": "object",
            "properties": {
                "club_category": {
                    "type": "string"
                },
                "club_created_at": {
                    "type": "integer"
                },
                "club_created_by": {
                    "type": "integer"
                },
                "club_description": {
                    "type": "string"
                },
                "club_id": {
                    "type": "integer"
                },
                "club_name": {
                    "type": "string"
                }
            }
        },
        "database.EventDocument": {
            "type": "object",
            "properties": {
                "event_document_id": {
                    "type": "integer"
                },
                "event_id": {
                    "type": "integer"
                },
                "file_name": {
                    "type": "string"
                },
                "file_url": {
                    "type": "string"
                },
                "uploaded_at": {
                    "type": "integer"
                }
            }
        },
        "database.EventPermit": {
            "type": "object",
            "properties": {
                "additional_notes": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "documents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.EventDocument"
                    }
                },
                "event_categories": {
                    "type": "string"
                },
                "event_description": {
                    "type": "string"
                },
                "event_name": {
                    "type": "string"
                },
                "event_permit_id": {
                    "type": "integer"
                },
                "expected_attendance": {
                    "type": "integer"
                },
                "permit_type": {
                    "type": "string"
                },
                "slots": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.EventSlot"
                    }
                },
                "status": {
                    "type": "string"
                },
                "submitted_by": {
                    "description": "👈 NEW",
                    "type": "string"
                }
            }
        },
        "database.EventSlot": {
            "type": "object",
            "properties": {
                "end_time": {
                    "type": "string"
                },
                "event_id": {
                    "type": "integer"
                },
                "event_slot_id": {
                    "type": "integer"
                },
                "start_time": {
                    "type": "string"
                }
            }
        },
        "database.Officer": {
            "type": "object",
            "properties": {
                "club_id": {
                    "type": "integer"
                },
                "officer_id": {
                    "type": "integer"
                },
                "officer_name": {
                    "type": "string"
                },
                "officer_role": {
                    "type": "string"
                }
            }
        },
        "database.User": {
            "type": "object",
            "properties": {
                "user_created_at": {
                    "type": "integer"
                },
                "user_email": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "user_name": {
                    "type": "string"
                },
                "user_password": {
                    "type": "string"
                },
                "user_role": {
                    "type": "string"
                }
            }
        },
        "routes.FullPermitPayload": {
            "type": "object",
            "properties": {
                "documents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.EventDocument"
                    }
                },
                "event_permit": {
                    "$ref": "#/definitions/database.EventPermit"
                },
                "notes": {
                    "description": "Optional notes",
                    "type": "string"
                },
                "slots": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/database.EventSlot"
                    }
                }
            }
        },
        "routes.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "routes.LoginResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "user_created_at": {
                    "type": "integer"
                },
                "user_email": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "user_name": {
                    "type": "string"
                },
                "user_role": {
                    "type": "string"
                }
            }
        },
        "routes.LogoutResponse": {
            "description": "Response message after a successful logout.",
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "routes.PermitSummary": {
            "type": "object",
            "properties": {
                "event_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "slot_count": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                },
                "submitted_by": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
