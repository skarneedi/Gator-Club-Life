definitions:
  database.Announcement:
    properties:
      announcement_created_at:
        type: string
      announcement_created_by:
        type: integer
      announcement_id:
        type: integer
      announcement_message:
        type: string
      announcement_title:
        type: string
    type: object
  database.Booking:
    properties:
      booked_at:
        type: integer
      booking_id:
        type: integer
      booking_status:
        type: string
      event_id:
        type: integer
      user_id:
        type: integer
    type: object
  database.Club:
    properties:
      club_category:
        type: string
      club_created_at:
        type: integer
      club_created_by:
        type: integer
      club_description:
        type: string
      club_id:
        type: integer
      club_name:
        type: string
    type: object
  database.EventDocument:
    properties:
      event_document_id:
        type: integer
      event_id:
        type: integer
      file_name:
        type: string
      file_url:
        type: string
      uploaded_at:
        type: integer
    type: object
  database.EventPermit:
    properties:
      additional_notes:
        type: string
      created_at:
        type: integer
      documents:
        items:
          $ref: '#/definitions/database.EventDocument'
        type: array
      event_categories:
        type: string
      event_description:
        type: string
      event_name:
        type: string
      event_permit_id:
        type: integer
      expected_attendance:
        type: integer
      permit_type:
        type: string
      slots:
        items:
          $ref: '#/definitions/database.EventSlot'
        type: array
      status:
        type: string
      submitted_by:
        description: "\U0001F448 NEW"
        type: string
    type: object
  database.EventSlot:
    properties:
      end_time:
        type: string
      event_id:
        type: integer
      event_slot_id:
        type: integer
      start_time:
        type: string
    type: object
  database.Officer:
    properties:
      club_id:
        type: integer
      officer_id:
        type: integer
      officer_name:
        type: string
      officer_role:
        type: string
    type: object
  database.User:
    properties:
      user_created_at:
        type: integer
      user_email:
        type: string
      user_id:
        type: integer
      user_name:
        type: string
      user_password:
        type: string
      user_role:
        type: string
    type: object
  routes.FullPermitPayload:
    properties:
      documents:
        items:
          $ref: '#/definitions/database.EventDocument'
        type: array
      event_permit:
        $ref: '#/definitions/database.EventPermit'
      notes:
        description: Optional notes
        type: string
      slots:
        items:
          $ref: '#/definitions/database.EventSlot'
        type: array
    type: object
  routes.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  routes.LoginResponse:
    properties:
      message:
        type: string
      user_created_at:
        type: integer
      user_email:
        type: string
      user_id:
        type: integer
      user_name:
        type: string
      user_role:
        type: string
    type: object
  routes.LogoutResponse:
    description: Response message after a successful logout.
    properties:
      message:
        type: string
    type: object
  routes.PermitSummary:
    properties:
      event_name:
        type: string
      id:
        type: integer
      slot_count:
        type: integer
      status:
        type: string
      submitted_by:
        type: string
    type: object
info:
  contact: {}
paths:
  /announcements:
    get:
      description: Retrieves all announcements or by club_id
      parameters:
      - description: Filter by club ID
        in: query
        name: club_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/database.Announcement'
            type: array
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Get announcements
      tags:
      - Announcements
  /announcements/create:
    post:
      consumes:
      - application/json
      description: Allows an admin to create a new announcement
      parameters:
      - description: Announcement content
        in: body
        name: announcement
        required: true
        schema:
          $ref: '#/definitions/database.Announcement'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.Announcement'
        "400":
          description: Bad Request
          schema:
            type: string
        "401":
          description: Unauthorized
          schema:
            type: string
      summary: Create an announcement
      tags:
      - Announcements
  /bookings:
    post:
      consumes:
      - application/json
      description: Creates a booking with user ID, event ID, and booking status
      parameters:
      - description: Booking details
        in: body
        name: booking
        required: true
        schema:
          $ref: '#/definitions/database.Booking'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/database.Booking'
        "400":
          description: Invalid request data
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Error creating booking
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new booking
      tags:
      - Bookings
  /clubs:
    get:
      description: Returns clubs, optionally filtered by category
      parameters:
      - description: Filter by category
        in: query
        name: category
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/database.Club'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List all clubs
      tags:
      - Clubs
  /clubs/{id}:
    get:
      description: Returns details of a specific club
      parameters:
      - description: Club ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.Club'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get club by ID
      tags:
      - Clubs
  /clubs/{id}/officers:
    get:
      description: Returns officer list by club ID
      parameters:
      - description: Club ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/database.Officer'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List officers in a club
      tags:
      - Clubs
  /event-permits/submit:
    post:
      consumes:
      - application/json
      description: Accepts event, slots, documents, and notes. User must be logged
        in.
      parameters:
      - description: Full permit payload
        in: body
        name: permit
        required: true
        schema:
          $ref: '#/definitions/routes.FullPermitPayload'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Submit full event permit
      tags:
      - Event Permits
  /login:
    post:
      consumes:
      - application/json
      description: Validates credentials and sets session cookie
      parameters:
      - description: User login credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/routes.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.LoginResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Authenticate a user
      tags:
      - Authentication
  /logout:
    post:
      description: Destroys session and logs out
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/routes.LogoutResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/routes.LogoutResponse'
      summary: Logout a user
      tags:
      - Authentication
  /submissions:
    get:
      description: Returns event permits submitted by the logged-in user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/routes.PermitSummary'
            type: array
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get my submissions
      tags:
      - Submissions
  /users:
    get:
      description: Returns a list of all registered users. Admin access recommended.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/database.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Retrieve all users
      tags:
      - Users
  /users/create:
    post:
      consumes:
      - application/json
      description: Creates a new user with name, email, password, and role.
      parameters:
      - description: New user data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/database.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - Users
swagger: "2.0"
