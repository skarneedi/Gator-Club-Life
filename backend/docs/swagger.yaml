definitions:
  database.User:
    properties:
      user_created_at:
        type: integer
      user_email:
        type: string
      user_id:
        type: integer
      user_name:
        type: string
      user_password:
        type: string
      user_role:
        type: string
    type: object
  routes.LogoutResponse:
    description: Response message after a successful logout.
    properties:
      message:
        type: string
    type: object
info:
  contact: {}
paths:
  /logout:
    post:
      description: Destroys the current session and logs out the user.
      produces:
      - application/json
      responses:
        "200":
          description: Logout successful
          schema:
            $ref: '#/definitions/routes.LogoutResponse'
        "500":
          description: Error during logout
          schema:
            $ref: '#/definitions/routes.LogoutResponse'
      summary: Logout a user
      tags:
      - Authentication
  /users:
    get:
      description: Retrieves all users from the database.
      produces:
      - application/json
      responses:
        "200":
          description: List of users
          schema:
            items:
              $ref: '#/definitions/database.User'
            type: array
        "500":
          description: Error retrieving users
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get all users
      tags:
      - Users
  /users/create:
    post:
      consumes:
      - application/json
      description: Create a new user with the required fields, including password
        hashing.
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/database.User'
      produces:
      - application/json
      responses:
        "200":
          description: User successfully added
          schema:
            additionalProperties: true
            type: object
        "400":
          description: 'Invalid request: Unable to parse JSON or missing required
            fields'
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Error processing password or saving user to database
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new user
      tags:
      - Users
swagger: "2.0"
